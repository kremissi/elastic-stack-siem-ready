#
# NGINX enrichment pipeline
# Works best with Filebeat nginx module (fields under nginx.access.*).
# Also includes a fallback grok for raw access logs (combined format).
#
filter {
  if [fileset][module] == "nginx" {
    if [nginx][access] {
      mutate {
        add_field => {
          "source_ip" => "%{[nginx][access][remote_ip]}"
          "url_original" => "%{[nginx][access][url]}"
          "http_verb" => "%{[nginx][access][method]}"
          "http_status" => "%{[nginx][access][response_code]}"
          "user_agent_original" => "%{[nginx][access][user_agent]}"
        }
      }
      geoip {
        source => "source_ip"
        target => "source_geo"
      }
      useragent {
        source => "user_agent_original"
        target => "user_agent_details"
      }
    } else if [fileset][name] == "access" {
      grok {
        match => {
          "message" => [
            # Common/combined log format
            '^%{IPORHOST:source_ip} - %{DATA:nginx_access.user_name} \[%{HTTPDATE:nginx_access.time}\] "%{WORD:http_verb} %{DATA:url_original} HTTP/%{NUMBER:http_version}" %{NUMBER:http_status:int} (?:%{NUMBER:bytes:int}|-) "(?:%{DATA:referrer}|-)" "(?:%{DATA:user_agent_original}|-)"'
          ]
        }
        overwrite => ["message"]
      }
      geoip { source => "source_ip" target => "source_geo" }
      useragent { source => "user_agent_original" target => "user_agent_details" }
    }

    mutate {
      add_field => { "ingest_pipeline" => "nginx" }
    }
  }
}
